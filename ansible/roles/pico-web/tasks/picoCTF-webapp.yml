---
# Playbook that installs and configures the picoCTF API/webapp

- name: Ensure admin user owns pico http dir
  file:
    path: "{{ pico_http_dir }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    state: directory

# Fix "Invalid environment marker: platform_python_implementation != 'PyPy'"
- name: Upgrade setuptools
  pip:
    name: "setuptools"
    virtualenv: "{{ virtualenv_dir }}"
    extra_args: "--upgrade"

# Source was cloned in main
- name: Install picoCTF-web api from source
  pip:
    name: "file://{{ pico_web_api_dir }}"
    virtualenv: "{{ virtualenv_dir }}"
    extra_args: "--upgrade"

- name: Compile JSX
  command: "babel {{ pico_web_jsx_in_path }} -d {{ pico_web_js_out_path }}
   --presets=@babel/preset-env,@babel/preset-react"
  args:
    chdir: "/usr/lib"

# Copy web to another dir before build; this dir should be native on the host
- name: Synchronize picoCTF-web to a directory on host
  synchronize:
    src: "{{ pico_web_api_dir }}/"
    dest: "{{ web_build_dir }}"
    delete: yes
  delegate_to: "{{ inventory_hostname }}"

- name: Run Jekyll to rebuild new web
  shell: "cd {{ web_build_dir }}/web && jekyll build"
  become: yes

- name: Ensure admin user owns pico web config dir
  file:
    path: "{{ web_config_dir }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    state: directory

- name: Template deployment settings
  template:
    src: deploy_settings.py.j2
    dest: "{{ web_config_dir }}/deploy_settings.py"
    backup: yes
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  #no_log: True

- name: Template deployment settings for replica-reading ctf-stats
  template:
    src: deploy_settings_stats.py.j2
    dest: "{{ web_config_dir }}/deploy_settings_stats.py"
    backup: yes
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  #no_log: True
  when: mongodb_replica_enabled | bool

- name: Copy mongodb public cert if TLS enabled
  copy:
    src: mongodb_tls.pem
    dest: /etc/ssl/certs/mongodb_tls.pem
    owner: root
    group: root
    mode: 0644
  when: mongodb_tls_enabled | bool

- name: Copy rebuild script to home directory
  copy:
    src: rebuild_web.sh
    dest: "/home/{{ ansible_user }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0700
